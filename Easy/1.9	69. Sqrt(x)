# Brute force	
class Solution:
    def mySqrt(self, x: int) -> int:
        if x < 2:
            return x
        prev = 1
        for i in range(2,x+1):
            if i*i == x:
                return i
            elif i*i < x:
                prev = i
            elif i*i > x:
                return prev

# Newtons method	
class Solution:
    def mySqrt(self, x: int) -> int:
        r = x
        while r*r > x:
            r = (r + x / r) // 2
        return int(r)


# Binary search	
class Solution:
    def mySqrt(self, x: int) -> int:
        if x == 1:
            return x
        left, right = 0, x
        while left <= right:
            mid = left + (-left + right) // 2
            if mid * mid <= x < (mid+1)*(mid+1):
                return mid
            elif mid * mid > x:
                right = mid
            else:
                left = mid
