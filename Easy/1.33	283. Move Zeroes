# Fast and slow pointer	
class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        slow = 0
        for fast in range(len(nums)):
            if nums[fast] != 0 and nums[slow] == 0:
                nums[slow], nums[fast] = nums[fast], nums[slow]
            if nums[slow] != 0:
                slow += 1

# Snowball - gather all 0s	
class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        SnowBallSize = 0
        for i in range(len(nums)):
            if nums[i] == 0:
                SnowBallSize += 1
            elif SnowBallSize > 0:
                nums[i-SnowBallSize], nums[i] = nums[i], 0
