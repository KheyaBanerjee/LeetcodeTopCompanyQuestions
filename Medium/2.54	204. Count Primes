# Brute force, TIME LIMIT EXCEEDS	
class Solution:
    def countPrimes(self, n: int) -> int:
        # 
        if n < 3:
            return 0
        pset = [2]
        for i in range(3, n):
            c = 0
            for j in range(len(pset)):
                if i % pset[j] != 0:
                    c += 1
            if c == len(pset):
                pset.append(i)
        return len(pset)


# Remove non primes, almost TIME EXCEEDED	
class Solution:
    def countPrimes(self, n: int) -> int:
        count = 0
        nonPrime = [False]*n
        for i in range(2, n):
            if not nonPrime[i]:
                count += 1
                j = 2
                while i*j < n:
                    nonPrime[i*j] = True
                    j += 1
        return count
