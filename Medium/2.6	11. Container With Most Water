# Two pointer	
class Solution:
    def maxArea(self, height: List[int]) -> int:
        start, end = 0, len(height)-1
        max_area = 0
        while start < end:
            area = (end - start)*min(height[start], height[end])
            max_area = max(max_area, area)
            if height[start] <= height[end]:
                start += 1
            else:
                end -= 1
        return max_area

# Two pointer, changing the increment statement	
class Solution:
    def maxArea(self, height: List[int]) -> int:
        start, end = 0, len(height)-1
        max_area = 0
        while start < end:
            area = (end - start)*min(height[start], height[end])
            max_area = max(max_area, area)
            if height[start] < height[end]:
                start += 1
            elif height[start] > height[end]:
                end -= 1
            else:
                start += 1
                end -= 1
        return max_area
