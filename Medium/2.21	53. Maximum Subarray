# Add and carry only positive numbers DP memorization	
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        for i in range(1,len(nums)):
            if nums[i-1] > 0:
                nums[i] += nums[i-1]
        return max(nums)

# Divide and conquer	
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        def helper(A, L, R):
            if L > R:
                return -inf
            mid, csum, lsum, rsum = (L+R)//2, 0, 0, 0
            for i in range(mid-1, L-1, -1):
                csum += A[i]
                lsum = max(csum, lsum)
            csum = 0
            for i in range(mid+1, R+1):
                csum += A[i]
                rsum = max(rsum, csum)
            return max(helper(A, L, mid-1), helper(A, mid+1, R), lsum+A[mid]+rsum)
        return helper(nums, 0, len(nums)-1)
