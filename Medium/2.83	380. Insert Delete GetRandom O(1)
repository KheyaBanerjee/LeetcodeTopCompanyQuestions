# With remove, not O(1)	
class RandomizedSet:
    def __init__(self):
        self.randomset = list() 
    def insert(self, val: int) -> bool:
        if val in self.randomset:
            return False
        else:
            self.randomset.append(val)
            return True        
    def remove(self, val: int) -> bool:
        if val in self.randomset:
            self.randomset.remove(val)
            return True
        else:
            return False        
    def getRandom(self) -> int:
        elem = random.choice(self.randomset)
        return elem



# List + dictionary O(1)	
class RandomizedSet:
    def __init__(self):
        self.randomset = list() 
        self.randomset_dict = dict()
    def insert(self, val: int) -> bool:
        if val in self.randomset_dict:
            return False
        else:
            self.randomset_dict[val] = len(self.randomset)
            self.randomset.append(val)
            return True        
    def remove(self, val: int) -> bool:
        if val not in self.randomset_dict:
            return False
        else:
            idx2rem = self.randomset_dict[val]
            self.randomset_dict[self.randomset[-1]] = idx2rem
            self.randomset[idx2rem] = self.randomset[-1]
            self.randomset[-1] = val
            self.randomset.pop()
            self.randomset_dict.pop(val)
            return True 
    def getRandom(self) -> int:
        return random.choice(self.randomset)
