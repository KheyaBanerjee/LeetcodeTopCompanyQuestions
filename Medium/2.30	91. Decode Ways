# Top down, memorization TIME EXCEEDED	
class Solution:
    def numDecodings(self, s: str) -> int:
        def helper_dp(idx):
            if idx == len(s):
                return 1
            res = 0
            if s[idx] != '0': # 1 digit
                res += helper_dp(idx + 1)
            if idx < len(s)-1 and (s[idx] == '1' or (s[idx] == '2' and s[idx+1] <= '6')): # 2 digit
                res += helper_dp(idx + 2)
            return res
        return helper_dp(0)

# Bottom up, tabulation	
class Solution:
    def numDecodings(self, s: str) -> int:
        n = len(s)
        dp = [0]*(n+1)
        dp[n] = 1
        for i in range(n-1, -1, -1):
            if s[i] != '0': # 1 digit
                dp[i] += dp[i+1]
            if i < n-1 and (s[i] == '1' or (s[i] == '2' and s[i+1] < '7')): # 2 digit
                dp[i] += dp[i+2]
        return dp[0]
