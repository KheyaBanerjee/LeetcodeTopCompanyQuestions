# Brute force, TIME LIMIT EXCEEDED	
from math import prod
class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        if len(nums) == 1:
            return nums[0]
        res = -float('inf')
        for i in range(len(nums)):
            for j in range(i, len(nums)):
                sub = nums[i:j+1]
                res = max(res, prod(sub))
        return res


# Logic, local max min
class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        val = nums[0]
        maxval, minval = val, val
        for i in range(1, len(nums)):            
            if nums[i] < 0:
                maxval, minval = minval, maxval
            maxval = max(nums[i], maxval*nums[i])
            minval = min(nums[i], minval*nums[i])
            val = max(val, maxval)
        return val
