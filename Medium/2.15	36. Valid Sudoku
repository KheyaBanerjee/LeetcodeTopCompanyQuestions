# Keeping track of row, col, box values	
class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        ckrow = [[0 for i in range(9)] for j in range(9)]
        ckclm = [[0 for i in range(9)] for j in range(9)]
        ckbox = [[0 for i in range(9)] for j in range(9)]
        for i in range(9):
            for j in range(9):
                if board[i][j] != ".":
                    num = int(board[i][j]) - 1
                    k = i//3*3 + j//3
                    if ckrow[num][i] or ckclm[num][j] or ckbox[num][k]:
                        return False
                    ckrow[num][i] = ckclm[num][j] = ckbox[num][k] = 1
        return True

# Using seperate functions	
class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        def ValidRow():
            for row in board:
                if not isValid(row):
                    return False
            return True
        def ValidCol():
            for col in zip(*board):
                if not isValid(col):
                    return False
            return True
        def ValidBox():
            for i in range(0, 9, 3):
                for j in range(0, 9, 3):
                    sub = [board[i+di][j+dj] for dj in range(3) for di in range(3)]
                    if not isValid(sub):
                        return False
            return True
        def isValid(arr):
            sarr = ''.join(arr).replace('.','')
            return len(sarr) == len(set(sarr))

        return ValidRow() and ValidCol() and ValidBox()
